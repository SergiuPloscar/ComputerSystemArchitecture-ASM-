     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  
     6                                  extern exit, printf, fopen, fread, fclose, scanf
     7                                  import exit msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 5072314C6162382E74-         file_name db "Pr1Lab8.txt", 0   
    16 00000009 787400             
    17 0000000C 7200                        access_mode db "r", 0                                  
    18 0000000E FFFFFFFF                    file_descriptor dd -1    
    19 00000012 466973696572756C20-         format2 db "Fisierul contine %d vocale",0  
    19 0000001B 636F6E74696E652025-
    19 00000024 6420766F63616C6500 
    20 0000002D 257300                      format db "%s",0    
    21 00000030 00000000                    string dd 0
    22                                      len equ 100
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 68[0C000000]                push dword access_mode          ;we open the file with the text
    27 00000005 68[00000000]                push dword file_name
    28 0000000A FF15[00000000]              call [fopen]
    29 00000010 83C408                      add esp, 4*2 
    30 00000013 A3[0E000000]                mov [file_descriptor], eax 
    31 00000018 83F800                      cmp eax, 0                      ;if the open fails we end the execution
    32 0000001B 7464                        je final
    33 0000001D FF35[0E000000]              push dword [file_descriptor]
    34 00000023 6A64                        push dword len
    35 00000025 6A01                        push dword 1
    36 00000027 68[30000000]                push dword string       
    37 0000002C FF15[00000000]              call [fread]                    ;we read the text from the file
    38 00000032 83C410                      add esp, 4*4
    39 00000035 FF35[0E000000]              push dword [file_descriptor]    ;we close the file because we dont need it anymore
    40 0000003B FF15[00000000]              call [fclose]
    41 00000041 83C404                      add esp, 4
    42 00000044 FC                          cld
    43 00000045 BE[30000000]                mov ESI,string                  ;we prepare to parse through the text
    44 0000004A BB00000000                  mov EBX,0                       ;we keep the number of vowels in EBX
    45                                      repeta:
    46 0000004F AC                              lodsb
    47 00000050 3C00                            cmp AL,0                    ;if we reach the end of the text we end the execution
    48 00000052 742D                            je final
    49 00000054 3C61                            cmp AL,'a'                  ;we compare our current letter with every vowel
    50 00000056 7426                            je count
    51 00000058 3C65                            cmp AL,'e'
    52 0000005A 7422                            je count
    53 0000005C 3C69                            cmp AL,'i'
    54 0000005E 741E                            je count
    55 00000060 3C6F                            cmp AL,'o'
    56 00000062 741A                            je count
    57 00000064 3C75                             cmp AL,'u'
    58 00000066 7416                            je count
    59 00000068 3C41                             cmp AL,'A'
    60 0000006A 7412                            je count
    61 0000006C 3C45                             cmp AL,'E'
    62 0000006E 740E                            je count
    63 00000070 3C49                             cmp AL,'I'
    64 00000072 740A                            je count
    65 00000074 3C4F                             cmp AL,'O'
    66 00000076 7406                            je count
    67 00000078 3C55                             cmp AL,'U'
    68 0000007A 7402                            je count    
    69 0000007C EBD1                            jmp repeta                  ;if we reach this point our letter is not a vowel so we move on
    70                                          count:
    71 0000007E 43                              inc EBX                     ;if we reach this point our letter is a vowel and we count it
    72 0000007F EBCE                            jmp repeta
    73                                    
    74                                      
    75                                      final:
    76 00000081 53                          push dword EBX                  ;we print the number of vowels on the screen
    77 00000082 68[12000000]                push dword format2
    78 00000087 FF15[00000000]              call [printf]
    79 0000008D 83C408                      add esp,4*2
    80 00000090 6A00                        push dword 0
    81 00000092 FF15[00000000]              call [exit]
