     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  
     6                                  extern exit, fprintf, fopen, fread, fclose, scanf
     7                                  import exit msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  
    14                                  
    15                                  segment data use32 class=data
    16 00000000 507232364C6162382E-         file_name db "Pr26Lab8.txt", 0   
    16 00000009 74787400           
    17 0000000D 7700                        access_mode db "w", 0                                  
    18 0000000F FFFFFFFF                    file_descriptor dd -1
    19 00000013 2563256300                  format3 db "%c%c",0    
    20 00000018 257300                      format db "%s",0    
    21 0000001B 00000000                    string dd 0
    22                                      
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 68[0D000000]                 push dword access_mode     
    27 00000005 68[00000000]                 push dword file_name
    28 0000000A FF15[00000000]               call [fopen]                ; we open the file 
    29 00000010 83C408                       add esp, 4*2                ; clean-up the stack
    30 00000013 A3[0F000000]                 mov [file_descriptor], eax  ; store the file descriptor returned by fopen
    31 00000018 83F800                       cmp eax, 0                  ; check if fopen() has successfully created the file (EAX != 0)
    32 0000001B 746C                         je final
    33 0000001D FC                           cld
    34                                       repeta:                     
    35                                         
    36 0000001E 68[1B000000]                    push dword string
    37 00000023 68[18000000]                    push dword format
    38 00000028 FF15[00000000]                  call [scanf]             ; we take a word from the keyboard
    39 0000002E 83C408                          add esp,4*2              ; clean-up the stack
    40 00000031 83F800                          cmp eax,0                ; in case scanf crashes we end the execution
    41 00000034 7453                            je final            
    42 00000036 BE[1B000000]                    mov ESI,string           ; we parse through the letters of the word
    43                                          nextchar:
    44 0000003B BB00000000                          mov EBX,0            ; We use EBX to check if our letter is Uppercase
    45 00000040 AC                                  lodsb                ; We take a letter
    46 00000041 3C24                                cmp AL,'$'           ; If we reach the symbol $ we stop the execution
    47 00000043 7444                                je final
    48 00000045 3C00                                cmp AL,0             ; If we reach the end of the word we go back and read another word
    49 00000047 743E                                je afterjmp
    50 00000049 3C41                                cmp AL,'A'           ; We verify if the letter is uppercase ( A <= letter <= Z )
    51 0000004B 7C05                                jl afterinc
    52 0000004D 3C5A                                cmp AL,'Z'
    53 0000004F 7F01                                jg afterinc
    54 00000051 43                                  inc EBX              ; If we reach this point the letter is uppercase and we store that in EBX
    55                                              afterinc:
    56 00000052 83FB01                              cmp EBX,1            ; If the letter is uppercase we add the word to the file and go to the next line
    57 00000055 752E                                jne afterfile
    58 00000057 68[1B000000]                        push dword string
    59 0000005C FF35[0F000000]                      push dword [file_descriptor]
    60 00000062 FF15[00000000]                      call [fprintf]
    61 00000068 83C408                              add esp, 4*2
    62 0000006B 6A0D                                push dword 13
    63 0000006D 6A0A                                push dword 10
    64 0000006F 68[13000000]                        push dword format3
    65 00000074 FF35[0F000000]                      push dword [file_descriptor]
    66 0000007A FF15[00000000]                      call [fprintf]
    67 00000080 83C410                              add esp, 4*4
    68 00000083 EB99                                jmp repeta
    69                                              afterfile:          
    70                                                                   ; If we reach this point we move on to the next letter
    71 00000085 EBB4                                jmp nextchar
    72                                              afterjmp:
    73 00000087 EB95                                jmp repeta           ; If we reach this point our word had no uppercase letters so we move on to the next word
    74                                              
    75                                      
    76                                      
    77                                      
    78                                      final:
    79 00000089 FF35[0F000000]                  push dword [file_descriptor]        ; we close the file, clean up the stack and stop the execution
    80 0000008F FF15[00000000]                  call [fclose]
    81 00000095 83C404                          add esp, 4
    82 00000098 6A00                            push dword 0      
    83 0000009A FF15[00000000]                  call [exit]
